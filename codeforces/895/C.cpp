/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author parsa bahrami
 */

#pragma GCC optimize("O2")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long int ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ld> pld;
typedef pair<string, string> pss;
typedef pair<pll, ll> ppl;
typedef pair<ll, pll> plp;
typedef pair<pll, pll> ppp;

template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
//order_of_key , find_by_order
#define sz(x)                       (ll) x.size()
#define jjoin(x)                    for (auto i : x) cout << i << endl;
#define all(x)                      (x).begin(),(x).end()
#define F                           first
#define S                           second
#define Mp                          make_pair
#define sep                         ' '
#define error(x)                    cerr << #x << " = " << x << endl
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define set_random                  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());
#define kill(x)                     return cout << x << endl , 0;
#define Hkill(x)                    cout << x << endl; exit(0);
#define endl                        '\n'

ll poww(ll a, ll b, ll md) {
    if (b < 0) return 0;
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e5 + 10;
const ll LOG = 20;
const ll MAXA = 101;
const ll INF = 8e18;
const ll MOD = 1e9 + 7;
const ld PI = 4 * atan((ld) 1);
ll Pow[MAXN], dp[2][1LL << LOG], mask[MAXA], cnt[MAXA], A[MAXN], Prime[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,
                                                                 47, 53, 59, 61, 67}, n;

ll M2(ll x) {
    return x & 1;
}

/// yesssss i ammm very very very very goshad to change that
int main() {
    fast_io;
    set_random;
    cin >> n;

    for (ll i = 1; i <= n; i++) {
        cin >> A[i];
        cnt[A[i]]++;
    }
    for (ll i = 1; i <= 70; i++) {
        ll tmp = i;
        for (ll j = 0; j < 19; j++) {
            ll pr = Prime[j];
            ll Cnt = 0;
            while (!(tmp % pr)) tmp /= pr, Cnt++;
            if (Cnt & 1) mask[i] |= 1LL << j;
        }
    }
    dp[0][0] = 1;
    for (ll i = 1; i <= 70; i++) {
        //cout << poww(2, cnt[i] - 1, MOD) << endl;
        ll tof = poww(2, cnt[i] - 1, MOD);
        for (ll Mask = 0; Mask < (1LL << LOG); Mask++) {

            if (cnt[i] == 0) {
                dp[M2(i)][Mask] = dp[M2(i - 1)][Mask];
                continue;
            }
            dp[M2(i)][Mask] = (dp[M2(i)][Mask] + dp[M2(i - 1)][Mask] * tof % MOD) % MOD;
            dp[M2(i)][Mask ^ mask[i]] = (dp[M2(i)][Mask ^ mask[i]] + dp[M2(i - 1)][Mask] * tof % MOD) % MOD;

        }
        fill(dp[M2(i - 1)], dp[M2(i - 1)] + (1LL << LOG), 0);
    }
    cout << (dp[0][0] - 1 + MOD) % MOD << endl;
    return 0;
}
