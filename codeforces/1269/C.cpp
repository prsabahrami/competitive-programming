/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author parsa bahrami
 */
 
#pragma GCC optimize("O2")
 
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
 
using namespace std;
using namespace __gnu_pbds;
 
typedef long long int ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ld> pld;
typedef pair<string, string> pss;
typedef pair<pll, ll> ppl;
typedef pair<ll, pll> plp;
typedef pair<pll, pll> ppp;
 
template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
//order_of_key , find_by_order
#define sz(x)                       (ll) x.size()
#define jjoin(x)                    for (auto i : x) cout << i << endl;
#define all(x)                      (x).begin(),(x).end()
#define F                           first
#define S                           second
#define Mp                          make_pair
#define sep                         ' '
#define error(x)                    cerr << #x << " = " << x << endl
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define set_random                  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());
#define kill(x)                     return cout << x << endl , 0;
#define Hkill(x)                    cout << x << endl; exit(0);
#define endl                        '\n'
 
ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}
 
const ll MAXN = 2e6 + 10;
const ll MAXA = 101;
const ll INF = 8e18;
const ll MOD = 998244353; //1e9 + 7
const ld PI = 4 * atan((ld) 1);
ll n, k;
string s, tmp;
 
void init() {
    for (ll i = 0; i < k - n % k; i++) s.push_back('0');
    for (ll i = 0; i < k; i++) tmp.push_back(s[i]);
}
 
int main() {
    fast_io;
    cin >> n >> k;
    cin >> s;
    ll f = 0;
    init();
    for (ll i = 0; i + k <= sz(s) && !f; i += k) {
        string t = s.substr(i, k);
        if (s.substr(i, k) > tmp) {
            f = 1;
            continue;
        }
        if (s.substr(i, k) < tmp) break;
    }
 
    if (f == 0) {
        cout << n << endl;
        for (ll i = 0; i < n; i++) cout << tmp[i % k];
    } else {
        ll t = 1;
        for (ll i = 0; i < k; i++) t = (tmp[i] != '9' ? 0 : t);
        if (t == 1) {
            cout << ++n << endl;
            for (ll i = 0; i < n; i++) {
                ll bib = i % k;
                if (bib) cout << 0;
                else cout << 1;
            }
        } else {
            ll tt = 1;
            for (ll i = sz(tmp) - 1; i >= 0 && tt; i--) {
                if ((tmp[i] - 48) + 1 <= 9) tmp[i] = (tmp[i] - 48) + 49, tt = 0;
                else tmp[i] = '0', tt = 1;
            }
            cout << n << endl;
            for (ll i = 0; i < n; i++) cout << tmp[i % k];
        }
    }
    return 0;
}